{"version":3,"file":"static/js/694.0f56c6ef.chunk.js","mappings":"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","sources":["services/Statistics.js","pages/Rewards/components/Breakdown.jsx","pages/Rewards/components/Referral.jsx","pages/Rewards/styled.js","pages/Rewards/components/TopRanking.jsx","pages/Rewards/index.jsx"],"sourcesContent":["import http from '.'\r\nimport {\r\n  apiStatisticsBreakdown,\r\n  apiStatisticsLeaderboard,\r\n  apiStatisticsRefferdUsers,\r\n} from './apiRouter'\r\n\r\nconst getBreakdown = () => http.get(apiStatisticsBreakdown)\r\nconst getStatisticsRefferedUsers = () => http.get(apiStatisticsRefferdUsers)\r\nconst getLeaderboard = () => http.get(apiStatisticsLeaderboard)\r\n\r\nconst Statistics = {\r\n  getBreakdown,\r\n  getStatisticsRefferedUsers,\r\n  getLeaderboard,\r\n}\r\n\r\nexport default Statistics\r\n","import React, { useEffect, useState } from 'react'\r\nimport Statistics from '../../../services/Statistics'\r\n\r\nfunction Breakdown({ onLoading }) {\r\n  const [list, setList] = useState({})\r\n\r\n  const statisticBreakdown = () => {\r\n    onLoading(true)\r\n    Statistics.getBreakdown()\r\n      .then((res) => {\r\n        if (res.isOk) {\r\n          setList(res.data)\r\n        }\r\n      })\r\n      .catch(() => {})\r\n      .finally(() => onLoading(false))\r\n  }\r\n\r\n  useEffect(() => {\r\n    statisticBreakdown()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th> </th>\r\n            <th>Match</th>\r\n            <th>Points</th>\r\n            <th>Boosted Point</th>\r\n            <th>Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <div className=\"p-2\">\r\n                <div className=\"text-lg font-semibold\">Win a match </div>\r\n                <div className=\"text-[12px]\">Earn 10 points per match </div>\r\n              </div>\r\n            </td>\r\n            <td className=\"text-center align-middle\">\r\n              {list?.winning_matches?.matches}\r\n            </td>\r\n            <td className=\"text-center align-middle\">\r\n              {list?.winning_matches?.points}\r\n            </td>\r\n            <td className=\"text-center align-middle\">\r\n              {list?.winning_matches?.boosted_points}\r\n            </td>\r\n            <td className=\"text-center align-middle\">\r\n              {list?.winning_matches?.total_points}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div className=\"p-2\">\r\n                <div className=\"text-lg font-semibold\">Play 10 matches</div>\r\n                <div className=\"text-[12px]\">\r\n                  Earn 10 points by playing 10 matches. Once per day\r\n                </div>\r\n              </div>\r\n            </td>\r\n            <td className=\"text-center align-middle\">\r\n              {list?.ten_matches?.matches}\r\n            </td>\r\n            <td className=\"text-center align-middle\">\r\n              {list?.ten_matches?.points}\r\n            </td>\r\n            <td className=\"text-center align-middle\">\r\n              {list?.ten_matches?.boosted_points}\r\n            </td>\r\n            <td className=\"text-center align-middle\">\r\n              {list?.ten_matches?.total_points}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div className=\"p-2\">\r\n                <div className=\"text-lg font-semibold\">Play 20 matches</div>\r\n                <div className=\"text-[12px]\">Earn 20 points per match </div>\r\n              </div>\r\n            </td>\r\n            <td className=\"text-center align-middle\">\r\n              {list?.twenty_matches?.matches}\r\n            </td>\r\n            <td className=\"text-center align-middle\">\r\n              {list?.twenty_matches?.points}\r\n            </td>\r\n            <td className=\"text-center align-middle\">\r\n              {list?.twenty_matches?.boosted_points}\r\n            </td>\r\n            <td className=\"text-center align-middle\">\r\n              {list?.twenty_matches?.total_points}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Breakdown\r\n","import React, { useEffect, useState } from 'react'\r\nimport Statistics from '../../../services/Statistics'\r\n\r\nfunction Referral({ onLoading }) {\r\n  const [list, setList] = useState({})\r\n\r\n  const statisticRefferedUser = () => {\r\n    onLoading(true)\r\n    Statistics.getStatisticsRefferedUsers()\r\n      .then((res) => {\r\n        if (res.isOk) {\r\n          setList(res.data)\r\n        }\r\n      })\r\n      .catch(() => {})\r\n      .finally(() => onLoading(false))\r\n  }\r\n\r\n  useEffect(() => {\r\n    statisticRefferedUser()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th> </th>\r\n            <th>Referred users</th>\r\n            <th>Referred points</th>\r\n            <th>Total earned</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <div className=\"p-2\">\r\n                <div className=\"text-lg font-semibold\">Referral </div>\r\n                <div className=\"text-[12px]\">\r\n                  Earn 10% of total points from referred user{' '}\r\n                </div>\r\n              </div>\r\n            </td>\r\n            <td className=\"text-center\">{list?.referred_users}</td>\r\n            <td className=\"text-center\">{list?.referred_points}</td>\r\n            <td className=\"text-center\">{list?.total_points}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Referral\r\n","import styled from 'styled-components'\r\n\r\nexport const RewardsWrapper = styled.div``\r\nexport const LeaderBoardWrapper = styled.div``\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react'\r\nimport Statistics from '../../../services/Statistics'\r\nimport { LeaderBoardWrapper } from '../styled'\r\n\r\nfunction TopRanking({ onLoading }) {\r\n  const [list, setList] = useState({})\r\n\r\n  const getLeaderBoard = () => {\r\n    onLoading(true)\r\n    Statistics.getLeaderboard()\r\n      .then((res) => {\r\n        if (res.isOk) {\r\n          console.log(res.data)\r\n          setList(res.data)\r\n        }\r\n      })\r\n      .catch(() => {})\r\n      .finally(() => onLoading(false))\r\n  }\r\n\r\n  useEffect(() => {\r\n    getLeaderBoard()\r\n  }, [])\r\n  return (\r\n    <LeaderBoardWrapper>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Ranking</th>\r\n            <th>Name</th>\r\n            <th>Match Points</th>\r\n            <th>Boosted Point</th>\r\n            <th>Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* <tr>\r\n            <td className=\"text-center\">{list?.me?.rank}</td>\r\n            <td className=\"text-center\">{list?.me?.fullname}</td>\r\n            <td className=\"text-center\">{list?.me?.points}</td>\r\n            <td className=\"text-center\">{list?.me?.boosted_points}</td>\r\n            <td className=\"text-center\">{list?.me?.total_points}</td>\r\n          </tr> */}\r\n          {list?.leaderboard?.map((item, idx) => {\r\n            return (\r\n              <tr key={idx}>\r\n                <td className=\"text-center\">{item?.rank}</td>\r\n                <td className=\"text-center\">{item?.fullname}</td>\r\n                <td className=\"text-center\">{item?.points}</td>\r\n                <td className=\"text-center\">{item?.boosted_points}</td>\r\n                <td className=\"text-center\">{item?.total_points}</td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </LeaderBoardWrapper>\r\n  )\r\n}\r\n\r\nexport default TopRanking\r\n","import { Divider, Spin, Tabs } from 'antd'\r\nimport dayjs from 'dayjs'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { FaCheck } from 'react-icons/fa6'\r\nimport { GoCopy } from 'react-icons/go'\r\nimport Button from '../../components/Button'\r\nimport IconSvg from '../../components/SvgIcon'\r\nimport { LayoutCommon } from '../../layouts/styled'\r\nimport UserServices from '../../services/UserServices'\r\nimport Breakdown from './components/Breakdown'\r\nimport Referral from './components/Referral'\r\nimport TopRanking from './components/TopRanking'\r\nimport { RewardsWrapper } from './styled'\r\n\r\nfunction Rewards() {\r\n  const ref = useRef()\r\n  const [loading, setLoading] = useState(false)\r\n  const [isCopied, setIsCopied] = useState(false)\r\n  const [listMission, setListMission] = useState({})\r\n  const [isValidDailyClaim, setIsValidDailyClaim] = useState(false)\r\n  const [timeCountdown, setTimeCountdown] = useState([])\r\n  const [isClearInterval, setIsClearInterval] = useState(false)\r\n\r\n  const items = [\r\n    {\r\n      label: `Breakdown`,\r\n      key: 1,\r\n      children: <Breakdown onLoading={setLoading} />,\r\n    },\r\n    {\r\n      label: `Referral`,\r\n      key: 2,\r\n      children: <Referral onLoading={setLoading} />,\r\n    },\r\n    {\r\n      label: `Top 100`,\r\n      key: 3,\r\n      children: <TopRanking onLoading={setLoading} />,\r\n    },\r\n  ]\r\n\r\n  const getClaimRewards = () => {\r\n    setLoading(true)\r\n    UserServices.getRewards()\r\n      .then((res) => {\r\n        if (res.isOk) {\r\n          setListMission(res.data)\r\n          setIsValidDailyClaim(res.data?.daily_allowed)\r\n\r\n          if (res.data.daily_allowed) {\r\n            setIsValidDailyClaim(true)\r\n          } else {\r\n            startCountdown(res.data.daily_collected_at)\r\n          }\r\n        }\r\n      })\r\n      .catch(() => {})\r\n      .finally(() => setLoading(false))\r\n  }\r\n\r\n  const getCountdown = (timeUp) => {\r\n    const now = dayjs().unix()\r\n    const timeRemaining = dayjs(timeUp).add(13, 'hour').unix() - now\r\n\r\n    const hours = Math.floor((timeRemaining % (60 * 60 * 24)) / (60 * 60))\r\n    const minutes = Math.floor((timeRemaining % (60 * 60)) / 60)\r\n    const seconds = Math.floor(timeRemaining % 60)\r\n    if (timeRemaining > 0) setTimeCountdown([hours, minutes, seconds])\r\n    else setIsClearInterval(true)\r\n  }\r\n\r\n  const startCountdown = (date) => {\r\n    const id = setInterval(() => {\r\n      getCountdown(date)\r\n    }, 1000)\r\n    ref.current = id\r\n  }\r\n\r\n  const handleClaimRewards = (method, points) => {\r\n    setLoading(true)\r\n    UserServices.claimRewards({\r\n      points,\r\n      method,\r\n    })\r\n      .then((res) => {\r\n        if (res.isOk) {\r\n          getClaimRewards()\r\n        }\r\n      })\r\n      .catch(() => {})\r\n      .finally(() => setLoading(false))\r\n  }\r\n\r\n  useEffect(() => {\r\n    getClaimRewards()\r\n    return () => {\r\n      clearInterval(ref.current)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isClearInterval) {\r\n      clearInterval(ref.current)\r\n      setIsValidDailyClaim(true)\r\n    }\r\n  }, [isClearInterval])\r\n\r\n  return (\r\n    <RewardsWrapper>\r\n      <Spin spinning={loading}>\r\n        <LayoutCommon>\r\n          <div className=\"flex flex-col items-center\">\r\n            <div className=\"text-[32px]\">Current Balance</div>\r\n            <div className=\"my-4 flex w-full items-center justify-between\">\r\n              <div className=\"flex w-[200px] flex-col items-center gap-2\">\r\n                <Button\r\n                  disabled={!isValidDailyClaim}\r\n                  onClick={() =>\r\n                    handleClaimRewards('DAILY', listMission?.daily_points)\r\n                  }\r\n                >\r\n                  Claim\r\n                </Button>\r\n\r\n                <div className=\"mb-2 text-xs text-[#FF9C09]\">\r\n                  {`You can claim ${isValidDailyClaim ? 'every 6 hours' : `after ${timeCountdown.join(':')}`} `}\r\n                </div>\r\n              </div>\r\n              <div className=\"flex flex-col items-center gap-2\">\r\n                <div className=\"mt-2 flex items-center gap-1\">\r\n                  <img\r\n                    src=\"./image/circle_star.png\"\r\n                    alt=\"\"\r\n                    className=\"h-[14px]\"\r\n                  />\r\n                  <div>{listMission?.point}</div>\r\n                </div>\r\n                {listMission?.boosted && (\r\n                  <div className=\"flex gap-1\">\r\n                    <IconSvg name=\"icon-flash-fill\" />\r\n                    <div>2.0x Boost</div>\r\n                  </div>\r\n                )}\r\n                <div>Out of 10,000 points distributed</div>\r\n              </div>\r\n              <div>How to get boosted?</div>\r\n            </div>\r\n          </div>\r\n          <Divider />\r\n          <div className=\"mb-6 flex justify-between border-[1px] border-solid border-[#000000] p-4\">\r\n            <div>\r\n              <div className=\"text-lg font-semibold\">Referral</div>\r\n              <div>Earn 10% of total points from referred user</div>\r\n            </div>\r\n\r\n            <div className=\"flex gap-3\">\r\n              <div className=\"relative flex h-[50px] w-[200px] items-center justify-center rounded-[10px] border-[1px] border-solid border-gray-400 font-bold\">\r\n                {listMission?.referral_code}\r\n\r\n                <div className=\"absolute right-4 cursor-pointer\">\r\n                  {isCopied ? (\r\n                    <FaCheck size={22} color=\"green\" />\r\n                  ) : (\r\n                    <GoCopy\r\n                      size={20}\r\n                      onClick={() => {\r\n                        setIsCopied(true)\r\n                        navigator.clipboard.writeText(\r\n                          listMission?.referral_code\r\n                        )\r\n                        setTimeout(() => {\r\n                          setIsCopied(false)\r\n                        }, 1500)\r\n                      }}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <IconSvg name=\"icon-x\" />\r\n              {/* <IconSvg name=\"icon-discord\"  />\r\n              <IconSvg name=\"icon-gmail\" /> */}\r\n            </div>\r\n          </div>\r\n          <Tabs type=\"card\" items={items} />\r\n        </LayoutCommon>\r\n      </Spin>\r\n    </RewardsWrapper>\r\n  )\r\n}\r\n\r\nexport default Rewards\r\n"],"names":["getBreakdown","http","get","apiStatisticsBreakdown","getStatisticsRefferedUsers","apiStatisticsRefferdUsers","getLeaderboard","apiStatisticsLeaderboard","_ref","_list$winning_matches","_list$winning_matches2","_list$winning_matches3","_list$winning_matches4","_list$ten_matches","_list$ten_matches2","_list$ten_matches3","_list$ten_matches4","_list$twenty_matches","_list$twenty_matches2","_list$twenty_matches3","_list$twenty_matches4","onLoading","list","setList","useState","useEffect","Statistics","then","res","isOk","data","catch","finally","_jsx","children","_jsxs","className","winning_matches","matches","points","boosted_points","total_points","ten_matches","twenty_matches","referred_users","referred_points","RewardsWrapper","styled","div","_templateObject","_taggedTemplateLiteral","LeaderBoardWrapper","_templateObject2","_list$leaderboard","console","log","leaderboard","map","item","idx","rank","fullname","ref","useRef","loading","setLoading","isCopied","setIsCopied","listMission","setListMission","isValidDailyClaim","setIsValidDailyClaim","timeCountdown","setTimeCountdown","isClearInterval","setIsClearInterval","items","label","key","Breakdown","Referral","TopRanking","getClaimRewards","UserServices","getRewards","_res$data","daily_allowed","startCountdown","daily_collected_at","date","id","setInterval","timeUp","now","dayjs","unix","timeRemaining","add","hours","Math","floor","minutes","seconds","getCountdown","current","clearInterval","Spin","spinning","LayoutCommon","Button","disabled","onClick","handleClaimRewards","method","daily_points","claimRewards","concat","join","src","alt","point","boosted","IconSvg","name","Divider","referral_code","FaCheck","size","color","GoCopy","navigator","clipboard","writeText","setTimeout","Tabs","type"],"sourceRoot":""}