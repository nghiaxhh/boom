{"version":3,"file":"static/js/815.cba91cc7.chunk.js","mappings":"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","sources":["pages/UserInfo/components/ChangePassword.jsx","services/FileServices.js","pages/UserInfo/components/Profile.jsx","pages/UserInfo/styled.js","pages/UserInfo/index.jsx"],"sourcesContent":["import { Col, Divider, Form, Input, Row, Spin } from 'antd'\r\nimport React, { useState } from 'react'\r\nimport Button from '../../../components/Button'\r\nimport UserServices from '../../../services/UserServices'\r\nimport { toast } from 'sonner'\r\n\r\nconst ChangePassword = () => {\r\n  const [form] = Form.useForm()\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const handleSubmit = () => {\r\n    form\r\n      .validateFields()\r\n      .then((values) => {\r\n        setLoading(true)\r\n        const body = {\r\n          curr_password: values.password,\r\n          new_password: values.newPassword,\r\n        }\r\n\r\n        UserServices.changePassword(body)\r\n          .then((res) => {\r\n            if (res.isOk) {\r\n              form.resetFields()\r\n              toast.success('Success')\r\n            }\r\n          })\r\n          .catch(() => {})\r\n          .finally(() => setLoading(false))\r\n      })\r\n      .catch(() => {})\r\n  }\r\n\r\n  return (\r\n    <div className=\"border-[1px] border-solid border-[#d9d9d9]\">\r\n      <div className=\"flex justify-between px-[26px] py-7\">\r\n        <div className=\"font-semibold\">Change Password</div>\r\n      </div>\r\n      <Divider />\r\n      <Spin spinning={loading}>\r\n        <div className=\"px-[26px] pt-6\">\r\n          <Form\r\n            form={form}\r\n            colon={false}\r\n            labelCol={{ span: 7 }}\r\n            labelAlign=\"left\"\r\n            requiredMark={false}\r\n          >\r\n            <Row>\r\n              <Col span={20}>\r\n                <Form.Item\r\n                  label=\"Recent Password\"\r\n                  name={'password'}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'This field is required!',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label=\"New Password\"\r\n                  name={'newPassword'}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'This field is required!',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label=\"Confirm New Password\"\r\n                  name={'confirmPass'}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'This field is required!',\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        if (!value || getFieldValue('newPassword') === value) {\r\n                          return Promise.resolve()\r\n                        }\r\n                        return Promise.reject(\r\n                          new Error('Password is not valid!')\r\n                        )\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\" \">\r\n                  <Button onClick={handleSubmit}>Save</Button>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n      </Spin>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChangePassword\r\n","import http from '.'\r\nimport { apiUploadFile } from './apiRouter'\r\n\r\nconst uploadFile = (body) =>\r\n  http.post(apiUploadFile, body, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  })\r\n\r\nconst FileServices = { uploadFile }\r\n\r\nexport default FileServices\r\n","import { Col, Divider, Form, Image, Input, Row, Spin, Upload } from 'antd'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport IconSvg from '../../../components/IconSvg'\r\nimport { getBase64 } from '../../../helper/utils'\r\nimport Button from '../../../components/Button'\r\nimport UserServices from '../../../services/UserServices'\r\nimport FileServices from '../../../services/FileServices'\r\nimport { toast } from 'sonner'\r\nimport { useSelector } from 'react-redux'\r\nimport { useQueryMe } from '../../../hook/useQueryMe'\r\nimport { FaCheck } from 'react-icons/fa'\r\nimport { GoCopy } from 'react-icons/go'\r\n\r\nfunction Profile() {\r\n  const [form] = Form.useForm()\r\n  const fileCoverRef = useRef()\r\n  const { user } = useSelector((state) => state.common)\r\n  const { getInfo, loading: loadingQuery } = useQueryMe()\r\n\r\n  const [previewOpen, setPreviewOpen] = useState(false)\r\n  const [previewImage, setPreviewImage] = useState('')\r\n  const [isCopied, setIsCopied] = useState(false)\r\n  const [changeAvatar, setChangeAvatar] = useState(false)\r\n  const [changeCoverImg, setChangeCoverImg] = useState(false)\r\n  const [fileCover, setFileCover] = useState({})\r\n  const [linkImg, setLinkImg] = useState('')\r\n  const [fileAvatar, setFileAvatar] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [disabled, setDisabled] = useState(true)\r\n\r\n  const uploadProps = {\r\n    accept: 'image/png, image/jpeg',\r\n    maxCount: 1,\r\n    multiple: false,\r\n  }\r\n\r\n  const handlePreview = async (file) => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj)\r\n    }\r\n    setPreviewImage(file.url || file.preview)\r\n    setPreviewOpen(true)\r\n  }\r\n\r\n  const onChangeFileAvatar = ({ fileList: newFileList }) => {\r\n    if (newFileList[0]?.size > 1024 * 5 * 1024) {\r\n      return toast.error('File size larger than 5MB')\r\n    }\r\n    setChangeAvatar(true)\r\n    setFileAvatar(newFileList)\r\n  }\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      referalID: user.referalID,\r\n      fullname: user.fullname,\r\n      email: user.email,\r\n      description: user.description,\r\n    })\r\n    !!user.avatarUrl &&\r\n      setFileAvatar([\r\n        {\r\n          url: user.avatarUrl,\r\n        },\r\n      ])\r\n    setLinkImg(\r\n      user.coverImg\r\n        ? user.coverImg\r\n        : process.env.PUBLIC_URL + '/image/cover_image.png'\r\n    )\r\n  }, [user])\r\n\r\n  // handle submit form\r\n  const handleSubmit = async () => {\r\n    const values = form.getFieldsValue()\r\n\r\n    let responAvatar = null\r\n    let responCover = null\r\n    setLoading(true)\r\n    if (fileAvatar.length && changeAvatar) {\r\n      responAvatar = await FileServices.uploadFile({\r\n        file: fileAvatar[0]?.originFileObj,\r\n      })\r\n    }\r\n    if (!!fileCover && changeCoverImg) {\r\n      responCover = await FileServices.uploadFile({\r\n        file: fileCover,\r\n      })\r\n    }\r\n\r\n    const body = {\r\n      description: values.description,\r\n      fullname: values.fullname,\r\n      ...(responAvatar?.isOk && {\r\n        profile_img: responAvatar.data.file_name,\r\n      }),\r\n      ...(responCover?.isOk && {\r\n        cover_img: responCover.data.file_name,\r\n      }),\r\n    }\r\n\r\n    const res = await UserServices.updateUser(body)\r\n    if (res?.isOk) {\r\n      toast.success('Success')\r\n      getInfo()\r\n      setDisabled(true)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const handleChangeCoverPhoto = () => {\r\n    const uploadedFile = fileCoverRef.current.files[0]\r\n    const cachedURL = URL.createObjectURL(uploadedFile)\r\n    if (uploadedFile?.size > 1024 * 5 * 1024)\r\n      return toast.error('File size larger than 5MB')\r\n    setChangeCoverImg(true)\r\n    setLinkImg(cachedURL)\r\n    setFileCover(uploadedFile)\r\n  }\r\n\r\n  return (\r\n    <Spin spinning={loading || loadingQuery}>\r\n      <div className=\"border-[1px] border-solid border-[#d9d9d9]\">\r\n        <div className=\"flex justify-between px-[26px] py-7\">\r\n          <div className=\"font-semibold\">My Profile</div>\r\n          <div\r\n            className=\"flex cursor-pointer\"\r\n            onClick={() => setDisabled(false)}\r\n          >\r\n            <IconSvg name=\"icon-pencil\" />\r\n            Edit Profile\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n\r\n        <div className=\"px-[26px] pt-6\">\r\n          <div className=\"group relative mb-6\">\r\n            <img src={linkImg} alt=\"\" className=\"h-[200px] w-full\" />\r\n\r\n            <label className=\"absolute left-0 top-0  flex h-[200px] w-full cursor-pointer items-center justify-center\">\r\n              <div className=\"hidden text-white group-hover:block\">\r\n                <IconSvg name=\"icon-image\" />\r\n                Upload\r\n              </div>\r\n              <input\r\n                disabled={disabled}\r\n                hidden\r\n                ref={fileCoverRef}\r\n                type=\"file\"\r\n                id=\"avatar\"\r\n                accept=\"image/*.png,.jpg\"\r\n                onChange={handleChangeCoverPhoto}\r\n              />\r\n            </label>\r\n          </div>\r\n          <Form form={form} labelCol={{ span: 6 }} labelAlign=\"left\">\r\n            <Row>\r\n              <Col span={16}>\r\n                <Form.Item name=\"referalID\" label=\"Referal ID\">\r\n                  {disabled ? (\r\n                    <div className=\"relative w-[200px]\">\r\n                      {user?.referalID}\r\n\r\n                      <div className=\"absolute right-4 top-1/2 -translate-y-1/2 cursor-pointer\">\r\n                        {isCopied ? (\r\n                          <FaCheck size={22} color=\"green\" />\r\n                        ) : (\r\n                          <GoCopy\r\n                            size={20}\r\n                            onClick={() => {\r\n                              setIsCopied(true)\r\n                              navigator.clipboard.writeText(user?.referalID)\r\n                              setTimeout(() => {\r\n                                setIsCopied(false)\r\n                              }, 1500)\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <Input\r\n                      disabled\r\n                      // suffix={\r\n                      //   isCopied ? (\r\n                      //     <FaCheck\r\n                      //       className=\"cursor-pointer\"\r\n                      //       size={22}\r\n                      //       color=\"green\"\r\n                      //     />\r\n                      //   ) : (\r\n                      //     <GoCopy\r\n                      //       size={20}\r\n                      //       className=\"cursor-pointer\"\r\n                      //       onClick={() => {\r\n                      //         setIsCopied(true)\r\n                      //         navigator.clipboard.writeText(user.referalID)\r\n                      //         setTimeout(() => {\r\n                      //           setIsCopied(false)\r\n                      //         }, 1500)\r\n                      //       }}\r\n                      //     />\r\n                      //   )\r\n                      // }\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item name=\"fullname\" label=\"Game name\">\r\n                  {disabled ? (\r\n                    <div className=\"relative\">{user?.fullname}</div>\r\n                  ) : (\r\n                    <Input />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item name=\"email\" label=\"Email\">\r\n                  {disabled ? (\r\n                    <div className=\"relative\">{user?.email}</div>\r\n                  ) : (\r\n                    <Input disabled />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item name=\"description\" label=\"Description\">\r\n                  {disabled ? (\r\n                    <div className=\"relative\">{user?.description}</div>\r\n                  ) : (\r\n                    <Input.TextArea />\r\n                  )}\r\n                </Form.Item>\r\n                <Row style={{ marginBottom: 25 }}>\r\n                  <Col span={6} />\r\n\r\n                  <Button disabled={disabled} onClick={handleSubmit}>\r\n                    Save\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n              <Col span={8} className=\"flex flex-col justify-center\">\r\n                <Form.Item name=\"avatar\" label=\"\">\r\n                  <Upload\r\n                    {...uploadProps}\r\n                    disabled={disabled}\r\n                    listType=\"picture-circle\"\r\n                    fileList={fileAvatar}\r\n                    onChange={onChangeFileAvatar}\r\n                    onPreview={handlePreview}\r\n                    beforeUpload={() => {\r\n                      // setFileAvatar([...fileAvatar, file])\r\n                      return false\r\n                    }}\r\n                  >\r\n                    {fileAvatar.length < 1 && 'Avatar'}\r\n                  </Upload>\r\n                </Form.Item>\r\n\r\n                <div>Maximum capacity 5 MB</div>\r\n                <div>Format: .JPG, .JPEG, .PNG</div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n        {previewImage && (\r\n          <Image\r\n            wrapperStyle={{\r\n              display: 'none',\r\n            }}\r\n            preview={{\r\n              visible: previewOpen,\r\n              onVisibleChange: (visible) => setPreviewOpen(visible),\r\n              afterOpenChange: (visible) => !visible && setPreviewImage(''),\r\n            }}\r\n            src={previewImage}\r\n          />\r\n        )}\r\n      </div>\r\n    </Spin>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import styled from 'styled-components'\r\n\r\nexport const UserInfoWrapper = styled.div`\r\n  padding-top: 24px;\r\n\r\n  .ant-divider-horizontal {\r\n    margin: 0;\r\n  }\r\n\r\n  .flex {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`\r\n","import { Col, Divider, Row, Spin } from 'antd'\r\nimport React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport IconSvg from '../../components/IconSvg'\r\nimport { LayoutCommon } from '../../layouts/styled'\r\nimport AuthServices from '../../services/AuthServices'\r\nimport ChangePassword from './components/ChangePassword'\r\nimport Profile from './components/Profile'\r\nimport { UserInfoWrapper } from './styled'\r\n\r\nfunction UserInfo() {\r\n  const navigate = useNavigate()\r\n  const [tabActive, setTabActive] = useState(1)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const handleLogout = () => {\r\n    setLoading(true)\r\n    AuthServices.logOut()\r\n      .then((res) => {\r\n        if (res.isOk) {\r\n          localStorage.clear()\r\n          navigate('/')\r\n        }\r\n      })\r\n      .catch(() => {})\r\n      .then(() => setLoading(false))\r\n  }\r\n\r\n  return (\r\n    <UserInfoWrapper>\r\n      <Spin spinning={loading}>\r\n        <LayoutCommon>\r\n          <div className=\"mb-6 flex h-[100px] justify-between bg-[#FFF7E6] px-6\">\r\n            <div className=\" text-xl font-semibold\">Profile</div>\r\n            <img src={'./image/play_earn.png'} alt=\"\" height={90} />\r\n          </div>\r\n          <Row gutter={32}>\r\n            <Col span={6}>\r\n              <div className=\"rounded-lg bg-[#F8F8F8] px-4\">\r\n                <div className=\"flex h-12 gap-2\">\r\n                  <IconSvg name=\"icon-user\" />\r\n                  My Account\r\n                </div>\r\n                <Divider />\r\n\r\n                <div\r\n                  className={`flex h-12 cursor-pointer pl-5 ${tabActive === 1 && 'text-[#FF9C09]'}`}\r\n                  onClick={() => setTabActive(1)}\r\n                >\r\n                  Profile\r\n                </div>\r\n                <Divider />\r\n                <div\r\n                  className={`flex h-12 cursor-pointer pl-5 ${tabActive === 2 && 'text-[#FF9C09]'}`}\r\n                  onClick={() => setTabActive(2)}\r\n                >\r\n                  Change Password\r\n                </div>\r\n\r\n                <Divider />\r\n                <div\r\n                  className=\"flex h-12 cursor-pointer gap-2 text-[#FF4D4F]\"\r\n                  onClick={handleLogout}\r\n                >\r\n                  <IconSvg name=\"icon-logout\" />\r\n                  Log out\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col span={18}>\r\n              {tabActive === 1 ? <Profile /> : <ChangePassword />}\r\n            </Col>\r\n          </Row>\r\n        </LayoutCommon>\r\n      </Spin>\r\n    </UserInfoWrapper>\r\n  )\r\n}\r\n\r\nexport default UserInfo\r\n"],"names":["ChangePassword","form","Form","useForm","loading","setLoading","useState","_jsxs","className","children","_jsx","Divider","Spin","spinning","colon","labelCol","span","labelAlign","requiredMark","Row","Col","Item","label","name","rules","required","message","Input","Password","_ref","getFieldValue","validator","_","value","Promise","reject","Error","resolve","Button","onClick","handleSubmit","validateFields","then","values","body","curr_password","password","new_password","newPassword","UserServices","changePassword","res","isOk","resetFields","toast","success","catch","finally","uploadFile","http","post","apiUploadFile","headers","fileCoverRef","useRef","user","useSelector","state","common","getInfo","loadingQuery","useQueryMe","previewOpen","setPreviewOpen","previewImage","setPreviewImage","isCopied","setIsCopied","changeAvatar","setChangeAvatar","changeCoverImg","setChangeCoverImg","fileCover","setFileCover","linkImg","setLinkImg","fileAvatar","setFileAvatar","disabled","setDisabled","useEffect","setFieldsValue","referalID","fullname","email","description","avatarUrl","url","coverImg","IconSvg","src","alt","hidden","ref","type","id","accept","onChange","handleChangeCoverPhoto","uploadedFile","current","files","cachedURL","URL","createObjectURL","size","error","FaCheck","color","GoCopy","navigator","clipboard","writeText","setTimeout","TextArea","style","marginBottom","async","_responAvatar","_responCover","getFieldsValue","responAvatar","responCover","_fileAvatar$","length","FileServices","file","originFileObj","profile_img","data","file_name","cover_img","updateUser","Upload","maxCount","multiple","listType","fileList","_newFileList$","newFileList","onPreview","preview","getBase64","beforeUpload","Image","wrapperStyle","display","visible","onVisibleChange","afterOpenChange","UserInfoWrapper","styled","div","_templateObject","_taggedTemplateLiteral","navigate","useNavigate","tabActive","setTabActive","LayoutCommon","height","gutter","concat","handleLogout","AuthServices","logOut","localStorage","clear","Profile"],"sourceRoot":""}