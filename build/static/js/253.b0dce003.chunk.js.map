{"version":3,"file":"static/js/253.b0dce003.chunk.js","mappings":"0QAUA,MAiHA,EAjHqBA,KACnB,MAAOC,GAAQC,EAAAA,EAAKC,UACdC,GAAWC,EAAAA,EAAAA,OACVC,EAAOC,GAAiBC,EAAAA,EAAMC,YAC9BC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,GAiDvC,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAY,CAAAC,SAAA,CACVR,GACDM,EAAAA,EAAAA,MAACG,EAAAA,EAAqB,CAAAD,SAAA,EACpBE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCH,UACpDE,EAAAA,EAAAA,KAAA,OAAKE,IAAK,yBAA0BC,IAAI,GAAGC,MAAO,SAEpDJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBH,UACtCF,EAAAA,EAAAA,MAACS,EAAAA,EAAiB,CAAAP,SAAA,EAChBE,EAAAA,EAAAA,KAAA,OACEE,IAA8B,wBAC9BC,IAAI,GACJF,UAAU,eAGZD,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,SAAUd,EAAQK,UACtBE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kCAAiCH,SAAC,4BAInDE,EAAAA,EAAAA,KAACf,EAAAA,EAAI,CACHD,KAAMA,EACNwB,OAAO,WACPC,cAAc,EACdR,UAAU,SAAQH,UAElBE,EAAAA,EAAAA,KAACf,EAAAA,EAAKyB,KAAI,CACRC,KAAM,QACNC,MAAM,gBACNC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,qEAEX,CACEC,SAASC,EAAAA,EAAAA,MACTF,QAAS,yDAEXjB,UAEFE,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,SAIVlB,EAAAA,EAAAA,KAACmB,EAAAA,EAAM,CAAClB,UAAU,cAAcmB,QA9DrBC,KACnBrC,EACGsC,iBACAC,MAAMC,IACL9B,GAAW,GAEX+B,EAAAA,EAAaC,aAAa,CAAEC,MAAOH,EAAMG,QACtCJ,MAAMK,IACDA,EAAOC,MArCHC,MAChB,IAAIC,EAAc,EAClB,MAAMC,EAAW3C,EAAM4C,QAAQ,CAC7BC,OAAOlC,EAAAA,EAAAA,KAAA,OAAAF,SAAK,sCACZqC,SACEvC,EAAAA,EAAAA,MAAA,OAAKK,UAAU,gBAAeH,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,OAAAF,SAAK,gFACLE,EAAAA,EAAAA,KAAA,OAAAF,SAAMiC,SAINK,EAAQC,aAAY,KACxBN,GAAe,EACfC,EAASM,OAAO,CACdH,SACEvC,EAAAA,EAAAA,MAAA,OAAKK,UAAU,gBAAeH,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,OAAAF,SAAK,gFACLE,EAAAA,EAAAA,KAAA,OAAAF,SAAMiC,QAGV,GACD,KACHQ,YAAW,KACTC,cAAcJ,GACdJ,EAASS,UACTtD,EAASuD,EAAAA,EAAWC,KAAK,GACV,IAAdZ,EAAmB,EAYZD,EACF,IAGDc,SAAQ,IAAMlD,GAAW,IAAO,IAEpCmD,OAAM,QAAS,EA+C4C/C,SAAC,YAGvDE,EAAAA,EAAAA,KAACmB,EAAAA,EAAM,CACLlB,UAAU,cACVmB,QAASA,IAAMjC,EAASuD,EAAAA,EAAWI,OAAOhD,SAC3C,4BAMM,C,sECrHZ,MAAMO,EAAoB0C,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iMAY9BnD,EAAwBgD,EAAAA,GAAOC,IAAGG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,iG","sources":["pages/Authentication/ForgotPass/ConfirmEmail.jsx","pages/Authentication/ForgotPass/styled.js"],"sourcesContent":["import { Form, Input, Modal, Spin } from 'antd'\r\nimport React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Button from '../../../components/Button'\r\nimport { ROUTE_PATH } from '../../../routes/route.constant'\r\nimport AuthServices from '../../../services/AuthServices'\r\nimport { AuthenticationWrapper, ForgotPassWrapper } from './styled'\r\nimport { LayoutCommon } from '../../../layouts/styled'\r\nimport { isValidEmail } from '../../../helper/utils'\r\n\r\nconst ConfirmEmail = () => {\r\n  const [form] = Form.useForm()\r\n  const navigate = useNavigate()\r\n  const [modal, contextHolder] = Modal.useModal()\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const countDown = () => {\r\n    let secondsToGo = 3\r\n    const instance = modal.success({\r\n      title: <div>Yêu cầu thành công!</div>,\r\n      content: (\r\n        <div className=\"flex flex-col\">\r\n          <div>Kiểm tra email để đặt lại mật khẩu</div>\r\n          <div>{secondsToGo}</div>\r\n        </div>\r\n      ),\r\n    })\r\n    const timer = setInterval(() => {\r\n      secondsToGo -= 1\r\n      instance.update({\r\n        content: (\r\n          <div className=\"flex flex-col\">\r\n            <div>Kiểm tra email để đặt lại mật khẩu</div>\r\n            <div>{secondsToGo}</div>\r\n          </div>\r\n        ),\r\n      })\r\n    }, 1000)\r\n    setTimeout(() => {\r\n      clearInterval(timer)\r\n      instance.destroy()\r\n      navigate(ROUTE_PATH.HOME)\r\n    }, secondsToGo * 1000)\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    form\r\n      .validateFields()\r\n      .then((value) => {\r\n        setLoading(true)\r\n\r\n        AuthServices.confirmEmail({ email: value.email })\r\n          .then((respon) => {\r\n            if (respon.isOk) {\r\n              countDown()\r\n            }\r\n          })\r\n\r\n          .finally(() => setLoading(false))\r\n      })\r\n      .catch(() => {})\r\n  }\r\n\r\n  return (\r\n    <LayoutCommon>\r\n      {contextHolder}\r\n      <AuthenticationWrapper>\r\n        <div className=\"flex w-3/5 max-w-[740px] items-center\">\r\n          <img src={'./image/boom_login.png'} alt=\"\" width={600} />\r\n        </div>\r\n        <div className=\"flex w-2/5 items-center\">\r\n          <ForgotPassWrapper>\r\n            <img\r\n              src={process.env.PUBLIC_URL + '/image/boom_arena.png'}\r\n              alt=\"\"\r\n              className=\"w-[141px]\"\r\n            />\r\n\r\n            <Spin spinning={loading}>\r\n              <div className=\"mb-8 mt-6 text-[32px] font-bold\">\r\n                Forgot your password\r\n              </div>\r\n            </Spin>\r\n            <Form\r\n              form={form}\r\n              layout=\"vertical\"\r\n              requiredMark={false}\r\n              className=\"w-full\"\r\n            >\r\n              <Form.Item\r\n                name={'email'}\r\n                label=\"Email address\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Thông tin không được để trống',\r\n                  },\r\n                  {\r\n                    pattern: isValidEmail(),\r\n                    message: 'Email không đúng định dạng',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Form>\r\n\r\n            <Button className=\"my-6 w-full\" onClick={handleSubmit}>\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              className=\"mb-6 w-full\"\r\n              onClick={() => navigate(ROUTE_PATH.LOGIN)}\r\n            >\r\n              Back to login\r\n            </Button>\r\n          </ForgotPassWrapper>\r\n        </div>\r\n      </AuthenticationWrapper>\r\n    </LayoutCommon>\r\n  )\r\n}\r\n\r\nexport default ConfirmEmail\r\n","import styled from 'styled-components'\r\n\r\nexport const ForgotPassWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  .ant-form-item-label > label {\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n  }\r\n`\r\n\r\nexport const AuthenticationWrapper = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n"],"names":["ConfirmEmail","form","Form","useForm","navigate","useNavigate","modal","contextHolder","Modal","useModal","loading","setLoading","useState","_jsxs","LayoutCommon","children","AuthenticationWrapper","_jsx","className","src","alt","width","ForgotPassWrapper","Spin","spinning","layout","requiredMark","Item","name","label","rules","required","message","pattern","isValidEmail","Input","Button","onClick","handleSubmit","validateFields","then","value","AuthServices","confirmEmail","email","respon","isOk","countDown","secondsToGo","instance","success","title","content","timer","setInterval","update","setTimeout","clearInterval","destroy","ROUTE_PATH","HOME","finally","catch","LOGIN","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2"],"sourceRoot":""}